---
title: "Cuestionario Checkpoint 5"
author: "Inti Luna"
date: 2025-03-21
format: gfm
editor: visual
---

## ¿Qué es un condicional?

Una condición es una pregunta sobre una o varias variables, objetos o estado del sistema o del código. Y una condicional en python es la evaluación de la condición (o condiciones) y en dependencia de si esta se cumple se ejecuta un código u otro. Las condiciones logicas son usadas en python y para ello se usan operadores de comparación. Los comparadores permiten comparar distintos valores y el resultado es valor de verdadero o falso (boolean). 

Si la expresión de evaluación se cumple, se ejecuta el código después de "if" (si) y es común pero no es necesario siempre tener una alternativa de código a ejecutar cuando no se cumple la condición ("else"). En simples palabras seria: si se cumple la condición, ejecuta esto y si no se cumple ejecuta este otro código alternativo. 

Vamos a ver con unos ejemplos para que se entienda mejor.

Ejemplo 1. Condicionales
Imagina que la policia evalua si podemos conducir en una región que tiene una regulación donde dice que la edad mínima es de 19 años.

Pregunta: ¿Es la edad mayor de 19 años?
Operador a usar: Mayor que que en python es ">"

```{python}
#| label: codigo-ejemplo-1
#| fig-cap: "Ejemplo 1 de condicionales "

edad = 20
print(edad)

if edad > 19:
  print("Puede conducir en esta región")
else:
  print("No puede conducir en esta región")


```

Ejemplo 2. Condicionales

Imagina una tienda de zapatos quiere aplicar diferentes descuentos según el precio del zapato.

En este caso se evaluan dos condiciones y se tiene alternativa para otros casos:

- Pregunta 1: ¿Es el precio es menor a 50?, aplicando un descuento del 20%.
- Pregunta 2: ¿Es el precio es menor a 100 (pero mayor o igual a 50)?, aplicando un descuento del 10%.
- En todos los otros casos (precio igual o mayor a 100), aplicando un descuento del 5%.

```{python}
#| label: codigo-ejemplo-2
#| fig-cap: "Ejemplo 2 de condicionales "

precios_zapatos = [30,60,100]

for precio in precios_zapatos:
  if precio < 50:
    descuento = 20
    print("Zapato económico: ¡tienes un 20% de descuento!")
  elif precio < 100:
      descuento = 10
      print("Zapato de precio medio: te damos un 10% de descuento.")
  else:
      descuento = 5
      print("Zapato premium: aplica un 5% de descuento.")


```

Referencias <https://www.w3schools.com/python/python_conditions.asp>.

## ¿Cuáles son los diferentes tipos de bucles en Python? ¿Por qué son útiles?

En python existen dos tipos de bucles: 

For loops se usan cuando sabemos de antemano cuantas veces vamos a correr el código en base a un número de veces o cantidad de elementos a usar en una secuencia.

While loops se usa cuando no sabemos cuantas veces se requiere correr de antemano el código, cuando se mantenga una condición u ocurra un evento.

En otro lenguajes existe un tercero que es Do-While, es muy similar a while loop pero asegura que el código se ejecuta al menos una vez.

Vamos a ver algunos ejemplos para entender mejor.

Ejemplo Bucles-1:
Para elementos en una lista de valores de contaminación hacemos un bucle donde se ejecuta una vez por cada elemento de la lista y en dependencia de valor se imprime si el valor es alto o normal.

```{python}

niveles_contaminacion = [40, 55, 70, 30, 90]
valor_referencia = 50

for nivel in niveles_contaminacion:
    if nivel > valor_referencia:
        print("Nivel alto:", nivel)
    else:
        print("Nivel normal:", nivel)


```

Ejemplo Bucles-2

Para casos en que no sabemos el número de ejecuciones y depende de una condición. En este caso, la condición es que mientras el tiempo sea mayor que 0, vamos a ejecutar el código.

```{python}

tiempo_carga = 5

while tiempo_carga > 0:
    print("Cargando... Faltan:", tiempo_carga, "segundos")
    tiempo_carga -= 1

print("Web cargada")



```


Referencias 

<https://medium.com/@heyamit10/for-loop-vs-while-loop-a-comprehensive-guide-for-data-scientists-163b0c11eea0>

<https://realpython.com/python-while-loop/>



## ¿Qué es una lista por comprensión en Python?



```{python}


```



## ¿Qué es un argumento en Python?



```{python}

```

## ¿Qué es una función Lambda en Python?



```{python}


```



## ¿Qué es un paquete pip?
